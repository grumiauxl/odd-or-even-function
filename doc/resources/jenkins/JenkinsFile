node {
    withEnv(['AZURE_SUBSCRIPTION_ID_TEMP=99999999-9999-9999-9999-999999999999',
            'AZURE_TENANT_ID_TEMP=99999999-9999-9999-9999-999999999999']) {
        stage('Init') {
            cleanWs()
            checkout scm
        }

        stage('Build') {
            bat 'mvn -X clean package'
        }

        stage('Publish') {
            def RESOURCE_GROUP = '<resource_group>' 
            def FUNC_NAME = '<function_app>'
            // login Azure

            withCredentials([
                usernamePassword(credentialsId: 'Shredders2azuresp', passwordVariable: 'AZURE_CLIENT_SECRET', usernameVariable: 'AZURE_CLIENT_ID'),
                string(credentialsId: 'AZURE_SUBSCRIPTION_ID', variable: 'AZURE_SUBSCRIPTION_ID'),
                string(credentialsId: 'AZURE_TENANT_ID', variable: 'AZURE_TENANT_ID'),
                ]) {
            bat '''
                az login --service-principal -u $AZURE_CLIENT_ID -p $AZURE_CLIENT_SECRET -t $AZURE_TENANT_ID
                az account set -s $AZURE_SUBSCRIPTION_ID
            '''
            }
            bat 'cd $PWD/target/azure-functions/odd-or-even-function-sample && zip -r ../../../archive.zip ./* && cd -'
            bat "az functionapp deployment source config-zip -g $RESOURCE_GROUP -n $FUNC_NAME --src archive.zip"
            bat 'az logout'
        }
    }
}
